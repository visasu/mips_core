//
//--------------------------------------------------------------------------------
//          THIS FILE WAS AUTOMATICALLY GENERATED BY THE GENESIS2 ENGINE        
//  FOR MORE INFORMATION: OFER SHACHAM (CHIP GENESIS INC / STANFORD VLSI GROUP)
//    !! THIS VERSION OF GENESIS2 IS NOT FOR ANY COMMERCIAL USE !!
//     FOR COMMERCIAL LICENSE CONTACT SHACHAM@ALUMNI.STANFORD.EDU
//--------------------------------------------------------------------------------
//
//  
//	-----------------------------------------------
//	|            Genesis Release Info             |
//	|  $Change: 11904 $ --- $Date: 2013/08/03 $   |
//	-----------------------------------------------
//	
//
//  Source file: /afs/asu.edu/users/v/s/r/vsriva10/EEE591/HW2/starter-02/primitives/decoder.vp
//  Source template: decoder
//
// --------------- Begin Pre-Generation Parameters Status Report ---------------
//
//	From 'generate' statement (priority=5):
//
//		---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----
//
//	From Command Line input (priority=4):
//
//		---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----
//
//	From XML input (priority=3):
//
//		---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----
//
//	From Config File input (priority=2):
//
// ---------------- End Pre-Generation Pramameters Status Report ----------------

//decoder.vp


module  decoder_unq1 (
	input  logic [5:0] funct,	
	input  logic [5:0] opcode,	
	output logic [14:0] aluCtrl	
);


	parameter ADD  = 6'b100000, AND = 6'b100100, JR  = 6'b001000, NOR = 6'b100111, OR  = 6'b100101, SLT = 6'b101010, SRA = 6'b000011, SUB = 6'b100010, XOR = 6'b100110, SLL = 6'b000000, SRL = 6'b000010, ADDU = 6'b100001;

	parameter ADDI = 6'b001000, ANDI = 6'b001100, J = 6'b000010, LW = 6'b100011, ORI = 6'b001101, SLTI = 6'b001010, SW = 6'b101011, XORI = 6'b001110, LUI = 6'b001111, ADDIU = 6'b001001;

	always_comb begin
		case(opcode)
			ADDI  : aluCtrl = 15'd2;                       
			LW    : aluCtrl = 15'd4;                       
			SW    : aluCtrl = 15'd8;                       
			ANDI  : aluCtrl = 15'd32;                       
			ORI   : aluCtrl = 15'd256;                     
			SLTI  : aluCtrl = 15'd1024;                     
			XORI  : aluCtrl = 15'd16384;                    
			6'b000000: case(funct)
					ADD   : aluCtrl = 15'd1;                       
					AND   : aluCtrl = 15'd16;                       
		 			NOR   : aluCtrl = 15'd64;                       
					OR    : aluCtrl = 15'd128;                     
					SLT   : aluCtrl = 15'd512;                      
					SRA   : aluCtrl = 15'd2048;                     
					SUB   : aluCtrl = 15'd4096;                     
					XOR   : aluCtrl = 15'd8192;                     
					default : aluCtrl = 15'b0;  // TODO : check whether default is required or not
				   endcase                 
				   default : aluCtrl = 15'b0; 	// TODO : check whether default is required or not
		endcase
	end

endmodule // decoder_unq1
