//;my $bW = $self->get_parent()->get_param('bitWidth');

module `mname`(
	output logic [`2*$bW`:0] z,
	output logic z_valid,
	input logic result,
	input logic ready,
    input logic [`$bW`:0] ret,
	input logic clk,
	input logic rst);
    
    logic [`2*$bW`:0] temp_ret;
	logic [3:0] count;

	always_ff @(posedge clk or negedge rst)
	begin
		if(!rst)
		begin
			temp_ret<=0;
			count<=0;
			z<=0;
			z_valid<=0;
		end
		else if(ready==1)
		begin
			temp_ret <= $signed(ret);
			temp_ret <= temp_ret<<(count<<1);
			z <= z + temp_ret;
			count <= count+1;
			unique case(result)
				1'b0: z_valid=1'b0;
				1'b1: z_valid=1'b1;
			endcase
		end
	end
/*	unique_case(result,rst)
		2'b00 : z_valid=0;count=count+1;
		2'b01 : z_valid=0;z=0;count=0;
		2'b10 : z_valid=1;count=count+1;
		2'b11 : z_valid=0;z=0;count=0;
*/
endmodule: `mname`

