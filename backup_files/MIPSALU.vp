// MIPSALU.vp
//;my $bW = $self->get_parent()->get_param('bitWidth');

module `mname` (
input logic [`$bW-1`:0] ALUctl,
input logic [`$bW-1`:0] A,
input logic [`$bW-1`:0] B,
output logic [`$bW-1`:0] ALUOut,
output logic Zero
);
	assign Zero = (ALUOut==0);
	always_comb
		case (ALUctl)
			0:	ALUOut = A + B;
			1:	ALUOut = A - B;
			2:	ALUOut = A > B ? 1 : 0;
			3:	ALUOut = A < B ? 1 : 0;
			4:	ALUOut = A == B ? 1 : 0;
			5:	ALUOut = A != B ? 1 : 0;
			6:	ALUOut = A <= B ? 1 : 0;
			7:	ALUOut = A >= B ? 1 : 0;
			8:	ALUOut = A & B;
			9:	ALUOut = A | B;
			10:	ALUOut = ~(A & B);
			11:	ALUOut = ~(A | B);
			12:	ALUOut = A ^ B;
			13:	ALUOut = ~(A ^ B);
			14:	ALUOut = ~B;
			15:	ALUOut = B[`$bW-1`] ? (~(B)+1) : B;
			16:	ALUOut = A < B ? A : B;
			17:	ALUOut = A > B ? A : B;
			default: ALUOut = 0;
		endcase
// Empty module
endmodule: `mname`
