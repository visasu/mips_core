// MapReduce.vp
//;
//; use strict;
//; use warnings FATAL=>qw(all);
//; use diagnostics ;
//; my $m = parameter( name=>"inKeyWidth", val=>32, doc=>"Width of input");
//; my $n = parameter( name=>"inValueWidth", val=>32, doc=>"Width of input");
//; my $j = parameter( name=>"outKeyWidth", val=>32, doc=>"Width of input");
//; my $k = parameter( name=>"outValueWidth", val=>32, doc=>"Width of input");
//; my $i = parameter( name=>"addrWidth", val=>32, doc=>"Width of input");

module `mname` (
	input enable, 
	input task_id,
	input [`$m-1`:0] key,
	input [`$n-1`:0] value,
	input clk,
	output finish, 
	output read_request,
	output  write_request,
	output [`$j-1`:0] int_key,
	output [`$k-1`:0] int_value,
	output [`$i-1`:0] read_addr,
	output [`$i-1`:0] write_addr
);

//empty module
	`$MapReduceMapper->instantiate`(.enable(enable), .task_id(task_id), .key(key), .value(value), .clk(clk), .finish(finish), .read_request(read_request), .write_request(write_request), .int_key(int_key), .int_value(int_value), .read_addr(read_addr), .write_addr(write_addr));

endmodule: `mname`
	

			
