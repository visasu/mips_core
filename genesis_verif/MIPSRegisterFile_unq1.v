//
//--------------------------------------------------------------------------------
//          THIS FILE WAS AUTOMATICALLY GENERATED BY THE GENESIS2 ENGINE        
//  FOR MORE INFORMATION: OFER SHACHAM (CHIP GENESIS INC / STANFORD VLSI GROUP)
//    !! THIS VERSION OF GENESIS2 IS NOT FOR ANY COMMERCIAL USE !!
//     FOR COMMERCIAL LICENSE CONTACT SHACHAM@ALUMNI.STANFORD.EDU
//--------------------------------------------------------------------------------
//
//  
//	-----------------------------------------------
//	|            Genesis Release Info             |
//	|  $Change: 11904 $ --- $Date: 2013/08/03 $   |
//	-----------------------------------------------
//	
//
//  Source file: /afs/asu.edu/users/v/s/r/vsriva10/EEE591/HW2/starter-02/primitives/MIPSRegisterFile.vp
//  Source template: MIPSRegisterFile
//
// --------------- Begin Pre-Generation Parameters Status Report ---------------
//
//	From 'generate' statement (priority=5):
// Parameter wordLength 	= 32
// Parameter rfAddressWidth 	= 5
// Parameter rfWritePorts 	= 1
// Parameter rfEntryCount 	= 32
// Parameter rfReadPorts 	= 2
//
//		---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----
//
//	From Command Line input (priority=4):
//
//		---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----
//
//	From XML input (priority=3):
//
//		---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----
//
//	From Config File input (priority=2):
//
// ---------------- End Pre-Generation Pramameters Status Report ----------------

//RegisterFile
// wordLength (_GENESIS2_INHERITANCE_PRIORITY_) = 32
//
// rfEntryCount (_GENESIS2_INHERITANCE_PRIORITY_) = 32
//
// rfReadPorts (_GENESIS2_INHERITANCE_PRIORITY_) = 2
//
// rfAddressWidth (_GENESIS2_INHERITANCE_PRIORITY_) = 5
//
// rfWritePorts (_GENESIS2_INHERITANCE_PRIORITY_) = 1
//

module MIPSRegisterFile_unq1(
	input logic [31:0] rfWriteData_p0,
    	input logic [4:0] rfWriteAddr_p0,
	input logic rfWriteEn_p0,

    	input logic [4:0] rfReadAddr_p0, // changed from $ab to $rA
	output logic [31:0] rfReadData_p0,
	input logic rfReadEn_p0,
    	input logic [4:0] rfReadAddr_p1, // changed from $ab to $rA
	output logic [31:0] rfReadData_p1,
	input logic rfReadEn_p1,

	input logic clk
);

	logic [31:0] mem [31:0];
	
	
	always @(posedge clk) begin
		if(rfWriteEn_p0) begin
			mem[rfWriteAddr_p0]<=rfWriteData_p0;
		end
	end

		assign rfReadData_p0 = rfReadEn_p0 ? mem[rfReadAddr_p0] : 32'bx;
		assign rfReadData_p1 = rfReadEn_p1 ? mem[rfReadAddr_p1] : 32'bx;

endmodule: MIPSRegisterFile_unq1

